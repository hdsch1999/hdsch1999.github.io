                                                   操作系统之作业管理之进程调度

进程调度概述

进程调度是指计算机通过决策决定哪个进程优先使用就绪状态的进程可以获得cpu使用权，之所以有这个制度，也是因为在多道程序设计的环境下，计算机要对先让哪个进
程运行，后让哪个程序运行作出选择，要不然就程序就乱套了。进程调度有两个步骤，第一步我们需要将旧进程的运行信息保留，确保信息不会丢失。然后将旧进城请出运
行环境。第二步就是选择好需要运行的进程，准备好他需要的运行那个环境并为他分配好cpu。

就绪队列的排队机制
将就绪队列按照一定的顺序排成队列，以便程序可以用最短的时间找到就绪队列。

选择运行进程的委派机制
使程序以一定的策略选择就绪进程，并将cpu分配给他，也就是不那么机械的按照队列先进先出的原则，可以按照依照某一标准制定的优先级来决定下一个要运行的进程是
什么

新老进程的上下文切换机制
就是将目前运行的进程的上下文进行备份放入主存中，然后将即将执行的进程的上下文信息装好。

非抢占式的调度
也就是说一旦处理器分配给某一进程后，那么这个进程就会一直使用这份分配给他的资源，即使是进行程序调度也不能停止这个程序，也就更不可能抢占他正在使用的处理
器了，只有在进程完成了工作或成为了阻塞进程后才会让出处理器资源。

抢占式调度
无论你这个进程运行到什么程度我都可以把你叫停，在旧进程停止运行后，我们要保存好旧进程的上下文信息，并且将处理器资源分配给新进程。

抢占式调度切换频繁，开销大。相对公平，说白了就是谁都能上来运行几分钟，一般运行在通用系统中。非抢占式切换次数小，开销也就小，但是公平性欠佳，如果有一个
需要很长时间的进程，那么他就会霸占处理器很长时间。公平性也就低。一般运用于专用系统中。

进程调度算法

先来先服务算法：按照先来先服务原则，优先调度在就绪队列前面的进程。

短进程优先调度算法：优先调度所有进程中预计运行时间最短的。但这个算法不利于长进程的执行。

高优先权调度算法：优先调度优先权高的进程，使得紧迫的任务得以运行。

时间片轮转调度算法：按照先来先服务的原则在就绪队列排队，按照一定时间依次执行。不管进程是否执行完，时间片用完就停止运行，换下一个程序，直到再次轮到这个
程序。




