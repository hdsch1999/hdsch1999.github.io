                                                    计算机网络之TCP连接的建立

三次握手

三次握手中需要用到的TCP标记

ACk：Acknowledgement 确认位，ACK=1时，确认才生效。

SYN：Synchronization：同步位，SYN=1表示请求连接报文。

FIN：Finish 终止位， FIN=1时表示释放连接。

发送方首先会发出第一次报文，此时的SYN为一，seq为X（序列号）。（这是第一次握手）seq为X，代表着发送方发出的数据序列为X。SYN表示这是一个请求链接的报文

接收方在接受到这个报文时，也会被动打开TCP连接发出一个报文，（这是第二次握手）第二次握手的关键信息：SYN=1，这个标记的意思是这个报文是一个连接请求的报
文ACk表示对序列号的一个确认，这个标志要和确认号结合来看，ack是确认号，ack=X+1表示他希望收到序列号为X+1的数据。就是刚才收到的第一次握手的序列号为X，
现在接收者发送给发送者的第二次握手中告诉了发送者，他想要X序列之后的数据。seq为y，是接收者所发送的，代表着他自己的序列。

发送方在收到接受方的回应后，也会发出一条信息。这个信息中包含ACk=1，表示一个信息的确认号，这要与ack=y+1联合起来看。发送方要求对方再次发送信息的时候发
送y以后的序列的数据。seq=x+1，表示说我发出的数据是x+1，应了接收方上一条信息中对于序列号的要求。

在三次握手中

第一次第二次都有SYN，这表示请求连接，发送方请求一次连接，接收方请求一次连接。就好了，所以第三次没有请求连接。

第二次与第三次都有ACK，目的是同步一下序列号。经过三次握手，不仅是建立起了连接，还同步了序列号。

在接收方没有接收到报文之前，他是处于监听状态的。

在发送方发出第一个报文到他收到回复报文之前，是出于同步已发送状态。也就是说，发送方已经把SYN=1发送出去了，正在等待接收方的SYN信息。

从接收方接收到一个报文到接收方受到第二个报文之间，是同步已接收状态。就是说发送方发给我的连接信息我已经收到了。

对于发送方来说，只要第二次握手成功了，就是建立起连接了。在第二次握手之后，发送方处于建立连接状态。

对于接收方来说，在第三次握手之后，才能算建立起连接状态了。在第三次连接之后，接收方才处于连接状态。

双方对于建立起连接状态的时间不一致，只有在他们都建立起连接状态的情况下才能传输信息。

为什么发送方要发送出第三次报文呢？为什么两次报文不能建立起传输关系呢？

因为害怕已经失效的报文传输给对方，引起错误。

假设发送方的第一个报文超时了很久，以至于发送方又发送了一次。这次第二个报文很快到达了接收方。接收方接收到请求报文之后，很快会回复。而第一个请求报文
就失效了。如果两次握手就建立起了连接的话。那么在接收方对于那个失效的报文也作出回复的情况下，就会出现两条连接。因为连接建立的过于简单，一条请求，一条回
复就行了。

三次握手是怎样解决失效报文回复的问题的？

在第三次握手时候，发送方会发送连接报文，进行第三次握手。而在已经建立起连接之后，我们的发送方在面对姗姗来迟的第二个二次握手，就不会再作出回应了，有效的
避免了建立起两条连接。
