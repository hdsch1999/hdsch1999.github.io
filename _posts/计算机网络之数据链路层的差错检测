                                                     计算机网络之数据链路层的差错检测

奇偶校验妈

在比特流的尾部添加一位比特位，来检测比特流是否出错。
比如说：现在有一个00110010，我往后面添加一个1。这个一是用比特；比特流本身相加得3，所以用一来表示这个比特流本身是奇数。用一代表奇数，用0代表偶数。
然后如果在接收端发现数据传输过来是000100101，除了末尾的1，其他相加是2，与末尾的奇数不符。那么我们就可以发现他的错误了。
但是还有一种情况，如果前面出现了错误，但是还是跟末尾的奇数或偶数一致，那么我们的奇偶校验码就检测不出来了。
不要乱用多项式
循环冗余校验码CRC
这是一种根据传输或保存的数据而产生固定位数校验码的方法。
用于检测数据传输或者保存后可能出现的错误。
具体做法就是生成一些数字，计算出来并且附加到数据后面。接收的时候检验这个数字。
循环冗余校验码是用模2除法操作的，模2除法就是用异或的原理来计算的。比如1010除以1的结果是11。
步骤：
选定一个用于校验的多项式G(X)，并在尾部添加R个0。
将添加R个0的数据，使用模2除法除以多项式的位串。得到的余数填充在原数据R个0的位置得到可校验的位串。
举个例子，校验101001，多项式选定为x^3+x^2+1就是等于二进制位串1101（1*x^3+1*x^2+0*x^1+1*x^0），最高阶为3，就是往101001里添加三个0.也就是101001000.
将添加后的数，用模2相除法除以多项式的位串。得出的商是110101，得到的余数是001，将001填充到那三个0的位置。
将101001000变为101001001.
接收端会接收101001001，将其除以二进制位串。得到的余数就是0了。如果接收端得到的是0的话，那么接受的数据就没错了。

CRC的错误检测能力与位串的阶数R有关，简单来说就是在要检测的数据后面加越多的0，检错能力就越强，反之越弱。只加一个0就变得和奇偶校验码一样了。
数据链路层只会检错，不会纠错。检查到错误就将数据丢弃，不管他了，不会帮物理层改错的。
多项式并不是乱设的，各个领域有自己的专用多项式。不要乱用多项式。
